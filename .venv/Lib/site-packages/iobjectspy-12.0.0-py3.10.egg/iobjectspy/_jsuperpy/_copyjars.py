from ._logger import log_info
import glob

_exclude_jars = set(['com.supermap.licensemanager.jar'])


def _copy_jars(source_dir, target_dir, is_command=False):
    import os, shutil
    old_files = glob.glob(os.path.join(target_dir, 'com.supermap.*.jar'))
    for f in old_files:
        try:
            os.remove(f)
        except:
            import traceback
            from ._logger import log_warning
            log_warning('failed remove {} file'.format(f))

    files = glob.glob(os.path.join(source_dir, 'com.supermap.*.jar'))
    for f in files:
        name = os.path.basename(f)
        if name in _exclude_jars:
            continue
        try:
            shutil.copyfile(f, os.path.join(target_dir, name))
            if is_command:
                print('copy {}, OK'.format(name))
            else:
                log_info('copy {}, OK'.format(name))
        except:
            import traceback
            from ._logger import log_warning
            log_warning('failed copy {} to iobjectspy jars directory'.format(name))


def copy_jars(source_jar_path, is_command=False):
    import os
    if source_jar_path is not None and os.path.isdir(source_jar_path) and os.path.exists(source_jar_path):
        target_jars_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'jars')
        if is_command:
            print('source jar path: ' + source_jar_path)
            print('target jar path: ' + target_jars_path)
        else:
            log_info('source jar path: ' + source_jar_path)
            log_info('target jar path: ' + target_jars_path)
        _copy_jars(source_jar_path, target_jars_path, is_command)
