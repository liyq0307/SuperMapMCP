# !/usr/bin/env python3
# coding=utf-8
import os.path as osp
import pickle
import numpy as np
import pandas as pd

from ....toolkit._toolkit import get_config_from_yaml
from ..base.base_estimater import BaseEstimater


class ClsEstimater(BaseEstimater):
    def __init__(self, model_path, **kwargs):
        self.sdm_path = model_path
        self.model_base_name = osp.splitext(osp.basename(self.sdm_path))[0]
        self.model_pkl_path = osp.join(osp.dirname(model_path), self.model_base_name + '.pkl')
        with open(self.model_pkl_path, 'rb') as f:
            self.model = pickle.load(f)
        self.config = get_config_from_yaml(self.sdm_path)
        self.class_type = self.config.class_type
        self.sort_class_type = list(sorted(self.class_type.items(), key=lambda d: d[1]))

    def estimate_line(self, features):
        # pre_df = pd.DataFrame(data=np.expand_dims(np.array(features),axis=0), columns=list(self.model._Booster.feature_names))
        proa = self.model.predict_proba(np.expand_dims(np.array(features), axis=0))
        result_dict = {}
        for i, p in enumerate(list(proa[0, :])):
            result_dict[self.sort_class_type[i][0]] = p
        return result_dict

    def estimate_file(self, input_data, out_data, out_dataset_name=None):
        if isinstance(input_data, str):
            df = pd.read_csv(input_data)
        elif isinstance(input_data, pd.DataFrame):
            df = input_data
        else:
            raise TypeError('The type of input_data is not supported!')
        result = self.model.predict_proba(df.values[:, :])

        result_df = pd.DataFrame(data=result,
                                 columns=[n[0] for n in self.sort_class_type])
        result_df.to_csv(out_data, index=False)

        return result_df, out_data
