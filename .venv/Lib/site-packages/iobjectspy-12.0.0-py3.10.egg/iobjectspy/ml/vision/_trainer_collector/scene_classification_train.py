from ...toolkit._toolkit import get_config_from_yaml


class SceneClassification:
    def __init__(self, train_data_path, config, epoch, batch_size, lr, output_model_path, output_model_name,
                 log_path, backbone_name, backbone_weight_path, reload_model, pretrained_model_path, gpus,
                 init_data, **kwargs):
        self.train_data_path = train_data_path
        self.config = get_config_from_yaml(config)  # 已解析config为Dotmap对象
        self.epoch = epoch
        self.batch_size = batch_size
        self.lr = lr
        self.output_model_path = output_model_path
        self.output_model_name = output_model_name
        self.log_path = log_path
        self.backbone_name = backbone_name
        self.backbone_weight_path = backbone_weight_path
        self.reload_model = reload_model
        self.pretrained_model_path = pretrained_model_path
        self.gpus = gpus
        self.init_data = init_data
        self.config_path = config
        self.kwargs = kwargs

    def train(self):
        """
        根据func_str拼接字符串自动执行各个网络的函数
        :return:
        """
        func_str = 'self.' + self.config.model.name + '_' + self.config.framework.name
        eval(func_str)()

    def image_classification_pytorch(self):
        from .._models.image_classification import ClassificationTrainer
        ClassificationTrainer().train(self.train_data_path, self.config, epoch=self.epoch, batch_size=self.batch_size,
                                      lr=self.lr,
                                      output_model_path=self.output_model_path,
                                      output_model_name=self.output_model_name,
                                      log_path=self.log_path, backbone_name=self.backbone_name,
                                      backbone_weight_path=self.backbone_weight_path, reload_model=self.reload_model,
                                      pretrained_model_path=self.pretrained_model_path, gpus=self.gpus,
                                      init_data=self.init_data, config_path=self.config_path, **self.kwargs)
