# !/usr/bin/env python3
# coding=utf-8
from iobjectspy.ml.vision._sample.create_object_detection_data_mask import CreateObjectDetectionDataMask
from .._sample.create_object_detection_data import CreateObjectDetectionData, CreateODObjectDetectionData


def create_voc_data(input_data, input_label, label_class_field, output_path, output_name,
                    training_data_format,
                    tile_format='jpg', tile_size_x=1024, tile_size_y=1024, tile_offset_x=512, tile_offset_y=512,
                    tile_start_index=0,
                    save_nolabel_tiles=False, **kwargs):
    create_td = CreateObjectDetectionData(input_data, input_label, label_class_field, output_path, output_name,
                                          training_data_format,
                                          tile_format, tile_size_x, tile_size_y, tile_offset_x,
                                          tile_offset_y,
                                          tile_start_index,
                                          save_nolabel_tiles, **kwargs)
    create_td.create_voc()


def create_object_detection_data(input_data, input_label, label_class_field, output_path, output_name,
                    training_data_format,
                    tile_format='jpg', tile_size_x=1024, tile_size_y=1024, tile_offset_x=512, tile_offset_y=512,
                    tile_start_index=0,
                    save_nolabel_tiles=False, **kwargs):
    create_td = CreateODObjectDetectionData(input_data, input_label, label_class_field, output_path, output_name,
                                          training_data_format,
                                          tile_format, tile_size_x, tile_size_y, tile_offset_x,
                                          tile_offset_y,
                                          tile_start_index,
                                          save_nolabel_tiles, **kwargs)
    create_td.create_od()


def create_object_extraction_data(input_data, input_label, label_class_field, output_path, output_name,
                         training_data_format,
                         tile_format='jpg', tile_size_x=1024, tile_size_y=1024, tile_offset_x=512, tile_offset_y=512,
                         tile_start_index=0,
                         save_nolabel_tiles=False, **kwargs):
    create_td = CreateObjectDetectionDataMask(input_data, input_label, label_class_field, output_path, output_name,
                                              training_data_format,
                                              tile_format, tile_size_x, tile_size_y, tile_offset_x,
                                              tile_offset_y,
                                              tile_start_index,
                                              save_nolabel_tiles, **kwargs)
    create_td.create_voc_mask()
