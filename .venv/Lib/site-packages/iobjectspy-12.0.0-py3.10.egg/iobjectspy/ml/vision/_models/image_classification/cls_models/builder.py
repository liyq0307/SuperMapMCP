# !/usr/bin/env python3
# coding=utf-8

from .backbones import get_backbone

def build_model(classes=1, backbone_name='efficientnet-b3', in_channels=3, encoder_weights='imagenet', freeze_encoder=False):
    """

    Args:
        backbone_name: (str) look at list of available backbones.
        freeze_encoder: (bool) Set encoder layers weights as non-trainable. Useful for fine-tuning
        classes: (int) a number of classes for output
    Returns:
        returns a model pre-trained on ImageNet

    """

    model = get_backbone(backbone_name, in_channels=in_channels, out_channels=classes)

    # freeze encoder weights for fine-tuning
    need_frozen_list = ['_fc', 'fc']
    if freeze_encoder:
        # freeze_model(model)
        for k, v in model.named_parameters():
            if any(x not in k.split('.') for x in need_frozen_list):
                v.requires_grad = False

    model._name = 'cls-{}'.format(backbone_name)

    return model