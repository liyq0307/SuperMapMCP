from .api import SegTorchTrainer
from .api import SegTorchEstimation

from ._torch_models import build_torch_seg_model


class UnetTrainer(SegTorchTrainer):

    def get_loss_type(self):
        if len(self.sda_data_config.dataset.class_type) > 2:
            self.loss_type = 'crossentropyloss'
        else:
            self.loss_type = 'dice_loss+bce_loss'


class UnetEstimation(SegTorchEstimation):
    def __init__(self, model_path, config, gpus, batch_size, test_aug=False, **kwargs):
        super(UnetEstimation, self).__init__(model_path, config, gpus, batch_size, test_aug, **kwargs)
        pass
