def find_free_port():
    """
    查找系统中一个可用的端口。

    这个方法通过尝试绑定到端口 0，操作系统会自动选择一个可用的端口来进行绑定。
    然后获取该端口号并返回。请注意，返回的端口在实际使用时可能会被其他进程占用，
    因为操作系统在返回端口号后，其他进程也可能在此端口上进行绑定。

    :return:
        - 一个可用的端口号，表示系统中一个未被占用的端口。
    """
    import socket

    # 创建一个套接字对象，使用 IPv4 地址和流式套接字（TCP）
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # 绑定到端口 0，操作系统会选择一个可用端口
    sock.bind(("", 0))

    # 获取分配给套接字的端口号
    port = sock.getsockname()[1]

    # 关闭套接字
    sock.close()
    # NOTE: there is still a chance the port could be taken by other processes.
    return port


def count_requires_grad_parameters(model):
    return sum(p.numel() for p in model.parameters() if p.requires_grad)
