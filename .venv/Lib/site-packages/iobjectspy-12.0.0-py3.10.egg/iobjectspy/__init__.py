from . import _version

__version__ = _version.get_version()

from ._locales import i18n

import os
i18n(os.path.abspath(os.path.dirname(os.path.dirname(__file__))))

try:
    from . import _jsuperpy as supermap
    from ._jsuperpy import set_gateway_port
    from ._jsuperpy import set_gateway
except ImportError as e:
    from . import _csuperpy as supermap

from .env import *
from .enums import *
from .data import *
from .conversion import *
from .analyst import *
from .threeddesigner import *
from .mapping import *

try:
    from .ml.utils import (recordset_to_numpy_array,
                           datasetvector_to_numpy_array,
                           numpy_array_to_datasetvector,
                           datasetraster_to_numpy_array,
                           numpy_array_to_datasetraster,
                           recordset_to_df,
                           datasetvector_to_df,
                           df_to_datasetvector,
                           datasetraster_to_df_or_xarray,
                           df_or_xarray_to_datasetraster)

    # from .ml import analyst
    # from .ml import geoparsing
    # from .ml import spacetime
    # from .ml import toolkit
    # from .ml import vision
except ImportError:
    import traceback
    from ._logger import log_warning
    log_warning("An error occur importing 'ml.utils' module error, the traceback:")
    log_warning(traceback.format_exc())

import atexit

is_objects_java_release = _version.is_objects_java_release


@atexit.register
def _close():
    """
    关闭工作空间，如果 iobjectspy 基于 iObjects Java 组件，会关闭 Java 端的 Gateway Server。
    """
    if _version.is_objects_java_release():
        supermap.gateway_shutdown()
    else:
        Workspace.close()


if is_objects_java_release():
    _main = supermap.main
else:
    def _main():
        print('iobjectspy unsupported iobjectspy script')

main = _main

# from ._locales import write_docs
# write_docs('iobjectspy_zh.py')
#机器学习功能兼容性解决措施，详细可网络搜索相关
os.environ["MKL_THREADING_LAYER"]='GNU'